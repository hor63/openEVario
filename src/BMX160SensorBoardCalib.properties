# BMX160SensorBoardCalib.properties
#
# Content: Preset values for the BMX160 sensor board
#
# Created on: May 01, 2020
#     Author: hor
#
#  This file is part of openEVario, an electronic variometer for glider planes
#  Copyright (C) 2020  Kai Horstmann
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

# Please note! These data here are an example and are for testing.
# They were measured for my first sensor board prototype, and are only valid for this one BMX160 device which was soldered on that board.

# For any other device it is better to set bias values to 0, and let the filter determine them unless you perform the measurements
# described below for your particular device.
# Automatic determination of the biases may take some time, and serious thermalling to get the values accurate.
# Magnetometer bias determination requires GPS for absolute course over ground.
# Please note that in reality the magnetometer bias
# is really the actual sensor bias superimposed with the magnetic deviation at the place where the device is mounted.
# For practical purposes the distinction is moot anyway.

# Calibration data for the BMX160 sensor box
# For the gyroscope these are bias and Variance values only.
# For the accelerometer bias, factor, and variances are available

# The magnetometer factors are relative to the Z axis magnetometer which itself has the assumed factor -1.0
# This makes sense because I am using it only for directions, i.e. I am interested in the ratios of the different
# axis only. (remember the Y and Z axis' of the BMX160 are 180deg opposite to my coordinate system)
# To obtain the values I am pointing the measured axis once upward, and once downward. Thus I am measuring the same
# value with each of the three magnetometers, and can directly compare the readings.
# For the other axis' the factor is:
# factor = -(rawValueZ-rawBiasZ)/(rawValue-rawBias)
magXFactor =  0.975124567896421
magYFactor = -0.987264161977402
magZFactor = -1.0

# Magnetometer bias can be measured for the magnetometer 
# measuring the magnetic field in an arbitrary direction as val1,
# turn the box 180 degrees that the measured axis points opposite and measure again as val2.
# The raw bias is
# ((val1 + val2) / 2)
# "factor" in the formula below is the calibration factor of the magnetometer in the respective direction
# The bias used in the application is now = rawBias * factor
magXBias = -15.9714594965599
magYBias =  16.8250743201183
magZBias =  -3.46763

# Variance of the magnetometer measurements
magXVariance = 2
magYVariance = 2
magZVariance = 2

# Gyro factor is hard to come by, unless you have a vinyl turntable with strobe calibration
# So leave the default at one, and rely on the factory trim
# However, the factors come handy because the sensor, and the vario coordinate systems are 180deg flipped around the X axis
gyrXFactor =  1.0
gyrYFactor = -1.0
gyrZFactor = -1.0

# Gyro bias is the easiest: Let the box rest and measure the gyro values. These are the raw bias.
# The bias listed here is the result of multiplying the raw bias with the gyro factor.
gyrXBias = -0.1531185
gyrYBias =  0.0372755
gyrZBias = -0.168634

# Variance of the gyro measurements
gyrXVariance = 0.3
gyrYVariance = 0.3
gyrZVariance = 0.3

# Accel bias is measured mostly the same as magnetometer bias.
# However the measured axis should point straight up for val1,
# and straight down for val2.
# The formula is: (val1 + val2) / 2
# The unit is the one of the sensor, for the BMX160 

accelXBias = -0.276479684015019
accelYBias = -0.125072170093235
accelZBias =  0.041068438513364

# For the accelerometer factor you can get the same measurements val1 and val2 at the same time
# when measuring the bias.
# I actually have a calibrated value for the Accelerometer, i.e. the gravity.
# Val1 is the value when the concerned axis points up.
# The formula is: gravityValue * 2 / (val1 - val2)
# Please note that you can use this factor directly to *multiply* your measured value to get the calibrated one.
#
# Most commercial digital MEMS accelerometers output a "g" value. It is nowhere said what absolute value 1g of these sensors actually is.
# I presume it is the default value 9.80665 m/s^2 (see https://en.wikipedia.org/wiki/Gravity_of_Earth).
# If you know the local gravity in your region you can calculate the factor more accurately.
# For Germany you can consult this site site of Deutsches Schwerereferenzsystem: 
# https://www.bkg.bund.de/DE/Ueber-das-BKG/Geodaesie/Schwere/Schwere-Deutschland/schwere-deutsch.html
# There is also a link to an online calculator for the local gravity in Germany: http://gibs.bkg.bund.de/geoid/gscomp.php?p=s
# The online calculator reports for my home base Lueneburg (53.248406N, 10.458892E, 45m Elev.) 9.813378 m/s^2. This is quite a bit above
# the standard value
#
# When you cannot find any better information for you country look for the next gravimeter measurement here:
# http://agrav.bkg.bund.de/agrav-meta/
#
# Long story short: 
# For accelerometers which indicate 'g' the Factor is Gravity * 2 / (Val1 - Val2).
# Gravity is either the standard value 9.80665 m/s^2 or, better, your actual local value (see above how to obtain that one).
# For accelerometers which indicate in m/s^2 the Factor is * 2 / (Val1 - Val2).
#
# Please note that the factor will go negative for BMX160 for the Y and Z axis because OpenEVario's coordinate system is 180deg rotated
# around the X-axis 
accelXFactor =  9.84158630317229
accelYFactor = -9.77508167981513
accelZFactor = -9.78402346953273

# Variance of the accelerometer measurements
# Note the variance is in m/2^2, not the variance of the measurement, when the sensor returns g. 
accelXVariance = 0.1
accelYVariance = 0.1
accelZVariance = 0.1

# Local value of the gravity, and its variance
# You may find you local gravity from the geodetic department or terrestrial sciences department of your country.
# For Germany that would be the "Bundesamt fuer Kartographie und Geodaesie"
# https://www.bkg.bund.de/DE/Ueber-das-BKG/Geodaesie/Schwere/Schwere-Deutschland/schwere-deutsch.html
# From that department there is a neat online calculator for your local gravity provided you know your coordinates and elevation.
# http://gibs.bkg.bund.de/geoid/gscomp.php?p=s
gravityValue = 9.8134
gravityVariance = 0.01
