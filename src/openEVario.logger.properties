# openEVario.logger.properties
#  Created on: Nov 19, 2017
#      Author: hor
#
# Configuration of the logger of the program. 
# This configuration is loaded by default by any program using log4cxx
# when this configuration file is in the current directory from where the program is invoked.  
#
# The format of the logger configuration is the same as for Apache log4j


# Here the description of logger patterns straight from
# https://logging.apache.org/log4cxx/latest_stable/apidocs/classlog4cxx_1_1_pattern_layout.html 
# The descriptions are written as:
# <conversion character>
# <Description of the character>

# c
# Used to output the logger of the logging event. The logger conversion specifier can be optionally followed by precision specifier, that is a decimal constant in brackets.
# If a precision specifier is given, then only the corresponding number of right most components of the logger name will be printed. By default the logger name is printed in full.
# For example, for the logger name "a.b.c" the pattern %c{2} will output "b.c".

# d	
# Used to output the date of the logging event. The date conversion specifier may be followed by a set of braces containing a date and time pattern string compatible with java.text.SimpleDateFormat, ABSOLUTE, DATE or ISO8601. For example, d{HH:mm:ss,SSS}, d{dd MMM yyyy HH:mm:ss,SSS} or d{DATE}. If no date format specifier is given then ISO8601 format is assumed.

# F
# Used to output the file name where the logging request was issued.

# l
# Used to output location information of the caller which generated the logging event.

# L
# Used to output the line number from where the logging request was issued.

# m	
# Used to output the application supplied message associated with the logging event.

# n
# Outputs the platform dependent line separator character or characters.
# This conversion character offers practically the same performance as using non-portable line separator strings such as "\n", or "\r\n". Thus, it is the preferred way of specifying a line separator.

# p	
# Used to output the level of the logging event.

# r
# Used to output the number of milliseconds elapsed since the start of the application until the creation of the logging event.

# t
# Used to output the name of the thread that generated the logging event.

# x
# Used to output the NDC (nested diagnostic context) associated with the thread that generated the logging event.

# X
# Used to output the MDC (mapped diagnostic context) associated with the thread that generated the logging event. The X conversion character must be followed by the key for the map placed between braces, as in %X{clientNumber} where clientNumber is the key. The value in the MDC corresponding to the key will be output.
# See MDC class for more details.

# %
# The sequence %% outputs a single percent sign.

log4j.rootLogger=info, RollingAppender

log4j.logger.openEV=info, stdout

log4j.logger.openEV.Main.GliderVarioMain=debug, RollingAppender
log4j.additivity.openEV.Main.GliderVarioMain=false

log4j.logger.openEV.Kalman=debug

log4j.logger.openEV.Drivers=debug
 
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
 
# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
# Output is like: 
#  INFO [0x7faaca3d3780] (openEVario.cpp:327) - GliderVarioStatus::STATUS_IND_ACC_HEADING is STATUS_IND_ACC_HEADING
 
log4j.appender.RollingAppender=org.apache.log4j.RollingFileAppender
log4j.appender.RollingAppender.File=openEVario.log
 
log4j.appender.RollingAppender.MaxFileSize=10MB
# Keep 10 backup files
log4j.appender.RollingAppender.MaxBackupIndex=10
 
log4j.appender.RollingAppender.layout=org.apache.log4j.PatternLayout
# log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n
log4j.appender.RollingAppender.layout.ConversionPattern=@%l:%n%d{dd MMM HH:mm:ss,SSS} %t %p %c - %m%n
# Output is like:
# @openEVario.cpp(327):
# 19 Dec 23:07:15,403 0x7f872cf3b780 INFO openEV - GliderVarioStatus::STATUS_IND_ACC_HEADING is STATUS_IND_ACC_HEADING

